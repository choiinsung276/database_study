(3) 함수 (Single-row function, aggregation function)
	1)단일행 함수(single-row function)
		-String Function
			
	* ASCII(),CHAR()
	------------
	SELECT ascii('a'),char(98);
			
	* LENGTH()
	-----------
	SELECT ename,length(ename) FROM emp;
	
	* INSTR('문자열1','문자열2') 문자열 1에서 문자열2를 찾음
	시작위치를 알려줌 SQL은 시작위치1부터 시작함
	없으면 0반환 (0은 없는위치라서)
	----------
	SELECT instr('foobarbar','bar')
	>>>  4 
	
	왼쪽에서 n만큼문자뽑기 오른쪽에서 n개수만큼문자뽑기
	substring(string,a,b) a번째부터 b만큼뽑는다
	substring(string,-b)
	* LEFT(),RIGHT(), SUBSTR(), SUBSTRING()
	SELECT left('abcdefg',3),right('abcdefg',4);
	SELECT substring('ilovesql',3);
	SELECT substring('ilovesql',3); >>sql
	SELECT substring('ilovesql',-8,3); >> ilo
	
	* LOWER(),UPPER()
	SELECT lower('문자열')
	
	* LTRIM(), RTRIM(), TRIM()
	공백제거
	
	* CEIL(),FLOOR(),ROUND(),TRUNCATE()
	소수점처리
	SELECT ceil(1.23); 정수형으로 올림
	floor() 정수형내림
	round(a,b) a를 소수점 b만큼만 나오게하고 나머지 반올림(b는 소수점자리수 결정)
	truncate(a,b) b만큼 남게 양수면 소수점 음수면 정수쪽 
	
	*MOD() 나머지구하는
	SELECT mod(29,9);
	
	*RAND() 난수
	select rand()
	
	*Date function
	NOW(),SYSDATE(),CURDATE(),CURTIME()
	2020-05-22 11:06:43
	2020-05-22 11:06:43
	2020-05-22
	11:06:43
	
	*year(),month(),dayofmonth()
	SELECT year(now()),month(now()),dayofmonth(now());
	
	*DAYOFWEEK() 1-일요일, WEEKDAY() 0-월
	
	*DAYOFYEAR() 
	
	*DATE_ADD(),DATE_SUB(),ADDDATE()
	SELECT date_add(now(), interval 5 year);
	SELECT date_add(now(), interval 100 day);
	
	SELECT datediff(now(),'2019-5-5');
	날짜 차이 
	
	2) Aggregation Function : avg(), sum(), min(), max(), count()
	
	//업무가 salesman인 직원들의 급여평균, 최고급여,최저급여,합계급여
	SELECT avg(sal) as avg, max(sal) as max, min(sal) as min, sum(sal) as sum
	from emp WHERE job = 'salesman';
	
	//총직원수
	SELECT count(ename) FROM emp;
	SELECT count(sal) FROM emp;
	
	(3) 기타 함수
		1) CONVERT()변환함수
		SELECT convert(150,char), convert('2020-5-5',date);
		2) CASE
			//업무가 salesman이면 '커미션 있음'이라고 출력하고
			그외 업무는 '커미션없음'이라고 출력해서 조회
			SELECT ename, job, comm 
				CASE 
					WHEN job = 'salesman'THEN '커미션있음'
					WHEN job = 'clerk'THEN'커미션있음'
					WHEN job = 'analyst'THEN'커미션있음'
				END as '커미션 여부'
			FROM emp;
	
			SELECT ename, job, comm, 
				CASE 
					WHEN job = 'salesman'THEN '커미션있음'
					Else '커미션없음'
				END as '커미션 여부'
			FROM emp;
		
		3) COALESCE()
			// 현재 직원들의 총 급여를 조회
			SELECT ename, sal, comm, (sal+coalesce(comm,0)) as '총급여' from emp;
			NULL 있으면 급여가 null로 됨
			comm 을 null값이 있으면 0으로 처리
			
			
1. 오늘부터 12월 25일까지 몇일이 남았는가?

2. 현재까지 근무한 직원들의 근무일수를 몇주 몇일로 조회.(단, 근무일수가 많은 사람 순으로 조회)

3. 10번 부서 직원들 중 현재까지의 근무월수를 계산해서 조회

4. 20번 부서 직원들 중 입사일자로부터 13개월이 지난 후의 날짜를 조회

5. 모든 직원에 대해 입사한 달의 근무일수를 조회

6. 현재 급여에 15%가 증가된 급여를 계산하여 사번,이름, 급여, 증가된 급여를 조회(단, 급여는 반올림하여 적용한다.)

7. 이름, 입사일, 입사일로부터 현재까지의 월수, 급여,급여 총계를 조회

8. 업무가 analyst이면 급여를 10%증가시키고 clerk이면 15%, manager이면 20%증가 시켜서 이름, 업무, 급여, 증가된 급여를 조회

9. 이름의 첫글자가 k보다 크고 y보다 작은 직원의 이름, 부서, 업무를 조회하시오.

8.DML:INSERT,UPDATE,DELETE
CREATE TABLE tbltest(
	id	int	null,
	name varchar(10), // 생략하면 null
	regdate datetime
);
	(1) INSERT 필드수와 값수가 일치해야함
		INSERT INTO 테이블명(필드명,..) VALUES(값,...)
		* 필드명 생략할때는 모든 필드에 값을 넣겠다는 뜻
		INSERT INTO 테이블명 VALUES(값,...)
		INSERT INTO tbltest(id, name) VALUES(1,'hong');
		INSERT INTO tbltest VALUES(2,'lee','2020-5-5');
		
*한글 인코딩
	show variables like'datadir';
	
	C:\ProgramData\MySQL\MySQL Server 5.7\my.ini 수정
	[client]

cmd 에서 chcp 65001 ; << 됨

	(2) UPDATE 테이블명 
	SET 필드명 = 값[필드명 = 값...]
	WHERE 조건문;
	-----------------
	UPDATE tbltest
	SET regdate='2020-1-1', name = 'tom'
	WHERE id = 3;
	
workbench에서 안전모드 해제
	edit > preference > sql editor >safe update 체크박스 해제
	
	(3) DELETE 
		DELETE FROM 테이블명 WHERE 조건문;
		
		delet from tbltest;
		
	테이블 삭제 DROP TABLE tbltest;
	
9.Sub Query(상관 질의)
(1) 다른 query 문에 포함된 query문 
(2) 서브쿼리 반드시 ()묶어서 해야함
(3) 연산자의 오른쪽에서 사용
(4) 서브쿼리먼저 실행된다 !!
(5) ORDER BY를 안쪽 쿼리문에 쓸수 없다. 
	//scott의 급여보다 더 많이 받는 직원의 이름, 업무, 급여를 조회
	SELECT ename, job,sal from emp WHERE sal>3000;
	SELECT sal FROM emp WHERE ename = 'scott'
	
	SELECT ename, job,sal from emp WHERE sal>
	(SELECT sal FROM emp WHERE ename = 'scott');
	//사번이 7521의 업무와 같고, 급여가 7934보다 많은 직원의 사번, 이름, 업무, 급여를 조회
	SELECT empno,ename,job,sal from emp WHERE job = 
	(SELECT job from emp WHERE empno ='7521')
	and sal > (SELECT sal FROM emp WHERE empno = '7934');
	//가장 최근에 입사한 직원의 이름, 부서, 업무, 입사일자조회
	SELECT ename, deptno, job, hiredate from emp WHERE hiredate =
	(select max(hiredate) from emp);
	
(6) 연산자
	1)단일행 연산자 
	2)다중행 연산자 : IN, ANY, ALL 
	
	//업무별로 최소급여를 받는 직원의 사번, 이름, 부서코드를 조회
	SELECT DISTINCT job FROM emp;
	SELECT min(sal) FROM emp GROUP BY job;
	SELECT empno, ename, deptno from emp
	SELECT job,min(sal) FROM emp GROUP BY job; > 3천,8백 , 5개 나오는데
	
	SELECT empno, ename, deptno from emp
	WHERE sal = (SELECT min(sal) FROM emp GROUP BY job);
	1대 5 대응이라 안됨
	다중행 연산자 = IN , ANY , ALL
	SELECT empno, ename, deptno from emp WHERE sal
	in (SELECT min(sal) FROM emp GROUP BY job);
	
	
	