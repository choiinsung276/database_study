1. Blake와 같은 부서에 있는 모든 직원의 사번, 이름, 입사일자 조회
	SELECT empno, empname, hiredate From emp WHERE deptno = 
	(SELECT deptno From emp WHERE empname = 'Blake');

2. 평균 급여 이상을 받는 직원들의  사번, 이름을 조회. 단, 급여가 많은 순으로 정렬 ??
	(오답) avg(sal) 조건문으로 못들어감
	SELECT empno, empname FROM emp WHERE sal >= avg(sal) ORDER BY sal DESC;
	(정답)
	SELECT empno, ename FROM emp
WHERE sal >=  (SELECT avg(sal) FROM emp) order by sal DESC;
	

3. 이름에 T자가 들어가는 직원이 근무하는 부서에서 근무하는 직원의 사번,이름, 급여 조회
	(오답) : t로 시작하는 X t가 들어가는
	SELECT empno, ename, sal FROM emp WHERE deptno IN
	(SELECT deptno FROM emp WHERE ename like 't%'); 
	(정답) 
	SELECT empno,ename,sal FROM emp 
	WHERE deptno IN (SELECT deptno FROM emp WHERE ename LIKE '%T%') ;
4. 부서의 위치가 dallas인 모든 직원에 대해 사번, 이름, 급여, 업무조회
	SELECT empno, ename, sal, job FROM emp 
	WHERE deptno IN(SELECT deptno FROM dept WHERE LOC = 'dallas');
5. King에게 보고하는 모든 직원의 이름과 부서, 업무, 급여를 조회
	SELECT ename,deptno, job,sal FROM emp 
	WHERE MGR = (SELECT empno FROM emp WHERE ename ='king'); 
6. 급여가 30번 부서의 최저급여보다 높은 직원의 사번, 이름, 급여 조회 ??
	SELECT empno, ename,sal FROM emp
	WHERE sal > (SELECT MIN(sal) FROM emp WHERE deptno=30);
7. 10번부서에서 30번 부서의 직원과 같은 업무를 하는 직원의 이름과 업무를 조회
	SELECT ename,job FROM emp 
	WHERE job IN(SELECT job FROM emp WHERE deptno=30) AND deptno=10;

조인 
1. 각 직원들에 대해 그들의 관리자(직속상사)보다 먼저 입사한 직원의 이름, 입사일, 관리자 이름, 관리자 입사일 조회
 SELECT a.ename, a.hiredate, b.ename as 관리자 이름, b.hiredate as 관리자 입사일 FROM emp a 
 INNER JOIN emp b ON a.hiredate<b.hiredate and a.mgr = b.empno;

2. 말단 사원의 사번, 이름, 업무, 부서번호, 근무지를 조회 (말단 사원 =mgr없는사람?)
(오답) mgr에 null이 있었음 ㅡㅡ
select a.empno, a.ename, a.job, a.deptno, b.loc FROM emp a 
INNER join dept b ON a.deptno = b.deptno  WHERE a.empno not in
(SELECT mgr from emp);
select a.empno, a.ename, a.job, a.deptno, b.loc FROM emp a 
INNER join dept b ON a.deptno = b.deptno  and a.empno not in
(SELECT mgr from emp);

SELECT empno, ename, job, deptno, loc FROM emp JOIN dept ON
emp.deptno = dept.deptno;
WHERE empno NOT IN(SELECT coalesce(mgr,0) from emp)
ORDER BY hiredate desc limit 1;


CREATE TABLE tblBook(
author	varchar(20) not null,
title	varchar(20)
);

INSERT INTO tblBook VALUES('최주현', '하늘과 땅');
INSERT INTO tblBook VALUES('최주현', '바다');
INSERT INTO tblBook VALUES('유은정', '바다');
INSERT INTO tblBook VALUES('박성우', '문');
INSERT INTO tblBook VALUES('최주현', '문');
INSERT INTO tblBook VALUES('박성우', '천국');
INSERT INTO tblBook VALUES('최지은', '천국');
INSERT INTO tblBook VALUES('최주현', '천국');
INSERT INTO tblBook VALUES('박성우', '고슴도치');
INSERT INTO tblBook VALUES('서금동', '나');

3. 한 권의 책에 대해 두 명 이상의 작가가 쓴 책을 검색
책이름	작가명	작가명
SELECT a.title, a.author,b.author FROM tblBook a INNER JOIN
tblBook b ON a.author < b.author and a.title = b.title;

4. 한 권의 책에 대해 세명의 작가가 쓴 책을 검색
책이름	작가명	작가명	작가명

SELECT a.title, a.author,b.author,c.author FROM tblBook a INNER JOIN
tblBook b ON a.author = b.author and a.title = b.title INNER JOIN
tblBook c ON b.author < c.author and b.title = c.title;
